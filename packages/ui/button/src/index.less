@osui-button-class-prefix: osui-button;

@button-types: strong, primary, link, text, icon;

.button-color-mixin(@color; @background; @border-color; @icon-color) {
    color: @color;
    background: @background;
    border-color: @border-color;

    svg {
        color: @icon-color;
    }
}

.generate(@i: length(@button-types)) when (@i > 0) {
    @type: extract(@button-types, @i);

    .@{osui-button-class-prefix}.@{ant-prefix}-btn-@{type},
    .@{osui-button-class-prefix} .@{ant-prefix}-btn-@{type} {

        .button-color-mixin(
            ~'var(--btn-@{type}-color)';
            ~'var(--btn-@{type}-bg)';
            ~'var(--btn-@{type}-border-color)';
            ~'var(--btn-@{type}-icon-color)';
        );

        &:focus {
            .button-color-mixin(
                ~'var(--btn-@{type}-focus-color)';
                ~'var(--btn-@{type}-focus-bg)';
                ~'var(--btn-@{type}-focus-border-color)';
                ~'var(--btn-@{type}-focus-color)';
            );

            box-shadow: var(--theme-component-focus-box-shadow);
        }

        &:hover {
            .button-color-mixin(
                ~'var(--btn-@{type}-hover-color)';
                ~'var(--btn-@{type}-hover-bg)';
                ~'var(--btn-@{type}-hover-border-color)';
                ~'var(--btn-@{type}-hover-color)';
            );
        }

        &:active {
            .button-color-mixin(
                ~'var(--btn-@{type}-active-color)';
                ~'var(--btn-@{type}-active-bg)';
                ~'var(--btn-@{type}-active-border-color)';
                ~'var(--btn-@{type}-active-color)';
            );
        }

        &[disabled] {
            .button-color-mixin(
                ~'var(--btn-@{type}-disable-color)';
                ~'var(--btn-@{type}-disable-bg)';
                ~'var(--btn-@{type}-disable-border-color)';
                ~'var(--btn-@{type}-disable-color)';
            );
        }

        &.@{osui-button-class-prefix}-loading {
            .button-color-mixin(
                ~'var(--btn-@{type}-loading-color)';
                ~'var(--btn-@{type}-loading-bg)';
                ~'var(--btn-@{type}-loading-border-color)';
                ~'var(--btn-@{type}-loading-color)';
            );
        }
    }

    .generate((@i - 1));
}

// antd 移除了default的样式，需要直接应用到ant-btn上，需要放到gengerate上面，确保有type的能覆盖它
/* stylelint-disable no-duplicate-selectors */
.@{osui-button-class-prefix}.@{ant-prefix}-btn,
.@{osui-button-class-prefix} .@{ant-prefix}-btn {
    .button-color-mixin(
        ~'var(--btn-default-color)';
        ~'var(--btn-default-bg)';
        ~'var(--btn-default-border-color)';
        ~'var(--btn-default-icon-color)';
    );

    &:focus {
        .button-color-mixin(
            ~'var(--btn-default-focus-color)';
            ~'var(--btn-default-focus-bg)';
            ~'var(--btn-default-focus-border-color)';
            ~'var(--btn-default-focus-color)';
        );

        box-shadow: var(--theme-component-focus-box-shadow);
    }

    &:hover {
        .button-color-mixin(
            ~'var(--btn-default-hover-color)';
            ~'var(--btn-default-hover-bg)';
            ~'var(--btn-default-hover-border-color)';
            ~'var(--btn-default-hover-color)';
        );
    }

    &:active {
        .button-color-mixin(
            ~'var(--btn-default-active-color)';
            ~'var(--btn-default-active-bg)';
            ~'var(--btn-default-active-border-color)';
            ~'var(--btn-default-active-color)';
        );
    }

    &[disabled] {
        .button-color-mixin(
            ~'var(--btn-default-disable-color)';
            ~'var(--btn-default-disable-bg)';
            ~'var(--btn-default-disable-border-color)';
            ~'var(--btn-default-disable-color)';
        );
    }

    &.@{osui-button-class-prefix}-loading {
        .button-color-mixin(
            ~'var(--btn-default-loading-color)';
            ~'var(--btn-default-loading-bg)';
            ~'var(--btn-default-loading-border-color)';
            ~'var(--btn-default-loading-color)';
        );
    }
}

.generate();

@osui-buttno-faces: success, error, warning;

.generate-face(@i: length(@osui-buttno-faces)) when (@i > 0) {
    @face: extract(@osui-buttno-faces, @i);

    .@{ant-prefix}-btn.@{osui-button-class-prefix}.@{osui-button-class-prefix}-face-@{face} {
        color: ~"var(--theme-@{face}-color)";
        border-color: ~"var(--theme-@{face}-color)";

        &:focus {
            color: ~"var(--theme-@{face}-color)";
            border-color: ~"var(--theme-@{face}-color)";
        }

        &:hover {
            color: ~"var(--theme-@{face}-color-hover)";
            border-color: ~"var(--theme-@{face}-color-hover)";
        }

        &:active {
            color: ~"var(--theme-@{face}-color-hover)";
            background-color: ~"var(--color-@{face}-1)";
            border-color: ~"var(--theme-@{face}-color-hover)";
        }

        &[disabled] {
            color: ~"var(--color-@{face}-3)";
            background-color: ~"var(--color-@{face}-1)";
            border-color: ~"var(--color-@{face}-2)";
        }
    }

    .@{osui-button-class-prefix}.@{ant-prefix}-btn-primary.@{osui-button-class-prefix}-face-@{face} {
        color: ~"var(--btn-primary-color)";
        background-color: ~"var(--theme-@{face}-color)";
        border-color: ~"var(--theme-@{face}-color)";

        &:focus {
            color: ~"var(--btn-primary-color)";
            background-color: ~"var(--theme-@{face}-color)";
            border-color: ~"var(--theme-@{face}-color)";
        }

        &:hover {
            color: ~"var(--btn-primary-color)";
            background-color: ~"var(--theme-@{face}-color-hover)";
            border-color: ~"var(--theme-@{face}-color-hover)";
        }

        &:active {
            color: ~"var(--btn-primary-color)";
            background-color: ~"var(--theme-@{face}-color-active)";
            border-color: ~"var(--theme-@{face}-color-active)";
        }

        &[disabled] {
            color: ~"var(--btn-primary-color)";
            background-color: ~"var(--color-@{face}-2)";
            border-color: ~"var(--color-@{face}-2)";
        }
    }

    .generate-face((@i - 1));
}

.generate-face();

// 对error text link 的button处理
.@{ant-prefix}-btn.@{ant-prefix}-btn-text,
.@{ant-prefix}-btn.@{ant-prefix}-btn-link {
    &.@{osui-button-class-prefix}.@{osui-button-class-prefix}-face-error {
        background: transparent;
    }
}

// ghost
.@{ant-prefix}-btn.@{ant-prefix}-btn-background-ghost {
    &.@{osui-button-class-prefix} {
        color: var(--theme-component-bg);
        background: transparent;
        border-color: var(--theme-component-bg);

        &:focus,
        &:hover {
            color: var(--btn-default-hover-color);
            background: transparent;
            border-color: var(--btn-default-hover-border-color);
        }

        &[disabled] {
            color: var(--btn-default-disable-color);
            background: transparent;
            border-color: var(--btn-default-disable-border-color);
        }
    }
}

.@{osui-button-class-prefix} {
    &-flex-center,
    &-flex-center .@{ant-prefix}-btn {
        display: inline-flex;
        align-items: center;
    }

    & .osui-icon + span {
        margin-left: 4px;
    }

    &.@{ant-prefix}-btn {
        // border-radius: var(--btn-border-radius-base);
        transition: none;
    }

    // loading的时候隐藏spinner后面的内容，除非强制keep-children
    &-loading &-icon-spinner:not(&-keep-children) + * {
        display: var(--btn-loading-text-display);
    }

    &.@{ant-prefix}-btn-link,
    &.@{ant-prefix}-btn-text {
        height: auto;
        margin: var(--btn-link-margin);
        padding: var(--btn-link-padding);
        border: 0;

        & span:hover {
            text-decoration: var(--btn-link-text-decoration);
        }
    }

    // 只有icon的时候居中icon
    &.@{ant-prefix}-btn-icon-only {
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

    // 去掉primary的box-shadow
    &.@{ant-prefix}-btn-primary {
        box-shadow: none;
    }

    &.@{ant-prefix}-btn::before {
        opacity: 0;
    }
}

// 仅icon形式
.@{osui-button-class-prefix}-btn-icon {
    cursor: pointer;

    .button-color-mixin(
        ~'var(--btn-icon-color)';
        ~'var(--btn-icon-bg)';
        ~'var(--btn-icon-border-color)';
        ~'var(--btn-icon-color)';
    );

    &:focus {
        .button-color-mixin(
            ~'var(--btn-icon-focus-color)';
            ~'var(--btn-icon-focus-bg)';
            ~'var(--btn-icon-focus-border-color)';
            ~'var(--btn-icon-focus-color)';
        );

        box-shadow: var(--theme-component-focus-box-shadow);
    }

    &:hover {
        .button-color-mixin(
            ~'var(--btn-icon-hover-color)';
            ~'var(--btn-icon-hover-bg)';
            ~'var(--btn-icon-hover-border-color)';
            ~'var(--btn-icon-hover-color)';
        );
    }

    &:active {
        .button-color-mixin(
            ~'var(--btn-icon-active-color)';
            ~'var(--btn-icon-active-bg)';
            ~'var(--btn-icon-active-border-color)';
            ~'var(--btn-icon-active-color)';
        );
    }

    &[disabled] {
        cursor: not-allowed;

        &.@{osui-button-class-prefix}-icon-spinner {
            color: var(--theme-primary-color);
        }

        .button-color-mixin(
            ~'var(--btn-icon-disable-color)';
            transparent;
            ~'var(--btn-icon-disable-border-color)';
            ~'var(--btn-icon-disable-color)';
        );
    }

    &.@{osui-button-class-prefix}-loading {
        .button-color-mixin(
            ~'var(--btn-icon-loading-color)';
            ~'var(--btn-icon-loading-bg)';
            ~'var(--btn-icon-loading-border-color)';
            ~'var(--btn-icon-loading-color)';
        );
    }
}

// revert antd不太正常的修复 https://github.com/ant-design/ant-design/issues/12978
a.@{osui-button-class-prefix} {
    &.@{ant-prefix}-btn {
        padding-top: 0;
        padding-bottom: 0;
    }
}

.@{ant-prefix}-btn.@{ant-prefix}-btn-sm {
    padding: 2px 11px;
}
